# Secure Environment Configuration Template
# Copy to .env and replace with actual secure values

# Server Configuration
PORT=3000
NODE_ENV="development"

# JWT Configuration - Generate with: openssl rand -base64 32
# NEVER use the same secret for JWT and database
JWT_SECRET="[GENERATE-SECURE-32-CHAR-SECRET]"
JWT_EXPIRES_IN="24h"

# GitHub OAuth Configuration - Get from GitHub Developer Settings
# Use separate OAuth apps for dev/staging/production
GITHUB_CLIENT_ID="[YOUR-GITHUB-CLIENT-ID]"
GITHUB_CLIENT_SECRET="[YOUR-GITHUB-CLIENT-SECRET]"
CALLBACK_URL="http://localhost:3000/auth/github/callback"

# Google OAuth Configuration - Get from Google Cloud Console
GOOGLE_CLIENT_ID="[YOUR-GOOGLE-CLIENT-ID]"
GOOGLE_CLIENT_SECRET="[YOUR-GOOGLE-CLIENT-SECRET]"
GOOGLE_CALLBACK_URL="http://localhost:3000/auth/google/callback"

# Frontend Configuration
FRONTEND_URL="http://localhost:3000"

# Database Configuration - Use strong passwords
# NEVER reuse passwords across services
DATABASE_HOST="[YOUR-DATABASE-HOST]"
DATABASE_PORT=5432
DATABASE_NAME="[YOUR-DATABASE-NAME]"
DATABASE_USER="[YOUR-DATABASE-USER]"
DATABASE_PASSWORD="[GENERATE-STRONG-PASSWORD]"

# Security Configuration
TOKEN_CACHE_TIMEOUT=300
TOKEN_REQUEST_TIMEOUT=5000
TOKEN_RETRY_ATTEMPTS=2
TOKEN_MAX_CACHE_SIZE=1000
TOKEN_ENABLE_DETAILED_LOGGING=false

# Security Notes:
# 1. Generate unique secrets for each environment
# 2. Use different passwords for JWT and database
# 3. Rotate credentials regularly
# 4. Never commit this file with real values